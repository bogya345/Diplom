// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBRS.DAL;

namespace WebBRS.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210505131036_CreateDB5")]
    partial class CreateDB5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebBRS.Models.Attendance", b =>
                {
                    b.Property<int>("IdAtt")
                        .HasColumnType("int");

                    b.Property<double>("Ball")
                        .HasColumnType("float");

                    b.Property<int?>("ClassWorkIdClassWork")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatePass")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimePass")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int?>("ExactClassForLecturerClassIdEXCFLC")
                        .HasColumnType("int");

                    b.Property<int?>("ExactClassIdClass")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextDoClassWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeAttedanceIdTA")
                        .HasColumnType("int");

                    b.Property<int?>("WorkPersonStatusIdWPS")
                        .HasColumnType("int");

                    b.HasKey("IdAtt");

                    b.HasIndex("ClassWorkIdClassWork");

                    b.HasIndex("ExactClassForLecturerClassIdEXCFLC");

                    b.HasIndex("ExactClassIdClass");

                    b.HasIndex("TypeAttedanceIdTA");

                    b.HasIndex("WorkPersonStatusIdWPS");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("WebBRS.Models.Auth.Role", b =>
                {
                    b.Property<int>("id_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name_role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_role");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebBRS.Models.Auth.User", b =>
                {
                    b.Property<int>("id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonIdPerson")
                        .HasColumnType("int");

                    b.Property<int?>("Roleid_role")
                        .HasColumnType("int");

                    b.Property<string>("login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_user");

                    b.HasIndex("PersonIdPerson");

                    b.HasIndex("Roleid_role");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebBRS.Models.ClassWork", b =>
                {
                    b.Property<int>("IdClassWork")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateGiven")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePathWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClasss")
                        .HasColumnType("int");

                    b.Property<double>("MaxBall")
                        .HasColumnType("float");

                    b.Property<string>("TextWork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClassWork");

                    b.ToTable("ClassWorks");
                });

            modelBuilder.Entity("WebBRS.Models.ConditionOfPerson", b =>
                {
                    b.Property<int>("IdConditionOfPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("_Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdConditionOfPerson");

                    b.ToTable("ConditionOfPersons");
                });

            modelBuilder.Entity("WebBRS.Models.Course", b =>
                {
                    b.Property<int>("IdCourse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCourse");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("WebBRS.Models.Curator", b =>
                {
                    b.Property<int>("CuratorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupIdGroup")
                        .HasColumnType("int");

                    b.Property<int?>("PersonIdPerson")
                        .HasColumnType("int");

                    b.HasKey("CuratorID");

                    b.HasIndex("GroupIdGroup");

                    b.HasIndex("PersonIdPerson");

                    b.ToTable("Curators");
                });

            modelBuilder.Entity("WebBRS.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentTypeDepartTypeID")
                        .HasColumnType("int");

                    b.Property<string>("FullNameDepart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeadDepartId")
                        .HasColumnType("int");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortNameDepart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("DepartmentTypeDepartTypeID");

                    b.HasIndex("HeadDepartId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WebBRS.Models.DepartmentType", b =>
                {
                    b.Property<int>("DepartTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullDepartTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortDepartTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartTypeID");

                    b.ToTable("DepartmentTypes");
                });

            modelBuilder.Entity("WebBRS.Models.DoClassWorkAttend", b =>
                {
                    b.Property<int>("IdDCWA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ball")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DatePass")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimePass")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClassWork")
                        .HasColumnType("int");

                    b.Property<string>("TextDoClassWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkPersonStatusIdWPS")
                        .HasColumnType("int");

                    b.HasKey("IdDCWA");

                    b.HasIndex("IdClassWork");

                    b.HasIndex("WorkPersonStatusIdWPS");

                    b.ToTable("DoClassWorkAttends");
                });

            modelBuilder.Entity("WebBRS.Models.ExactClass", b =>
                {
                    b.Property<int>("IdClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditoryDepartmentID")
                        .HasColumnType("int");

                    b.Property<byte>("ClassNumber")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateClassEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateClassStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExactClassForLecturerClassIdEXCFLC")
                        .HasColumnType("int");

                    b.Property<byte[]>("ID_1c_audit")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_1c_person")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_reff")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("IdSFG")
                        .HasColumnType("int");

                    b.Property<int?>("LecturerIdSLecturer")
                        .HasColumnType("int");

                    b.Property<int?>("PersonLecturerIdPerson")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectLecturerIdLecturer")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectLecturerIdSubject")
                        .HasColumnType("int");

                    b.HasKey("IdClass");

                    b.HasIndex("AuditoryDepartmentID");

                    b.HasIndex("ExactClassForLecturerClassIdEXCFLC");

                    b.HasIndex("IdSFG");

                    b.HasIndex("LecturerIdSLecturer");

                    b.HasIndex("PersonLecturerIdPerson");

                    b.HasIndex("SubjectLecturerIdLecturer", "SubjectLecturerIdSubject");

                    b.ToTable("ExactClasses");
                });

            modelBuilder.Entity("WebBRS.Models.ExactClassForLecturerClass", b =>
                {
                    b.Property<int>("IdEXCFLC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditoryaDepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LecturerIdPerson")
                        .HasColumnType("int");

                    b.HasKey("IdEXCFLC");

                    b.HasIndex("AuditoryaDepartmentID");

                    b.HasIndex("LecturerIdPerson");

                    b.ToTable("ExactClassForLecturerClasses");
                });

            modelBuilder.Entity("WebBRS.Models.Group", b =>
                {
                    b.Property<int>("IdGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExit")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentGroupDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupPrevIdGroup")
                        .HasColumnType("int");

                    b.Property<byte[]>("GroupPrev_ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SpecialtyIdSpec")
                        .HasColumnType("int");

                    b.HasKey("IdGroup");

                    b.HasIndex("DepartmentGroupDepartmentID");

                    b.HasIndex("GroupPrevIdGroup");

                    b.HasIndex("SpecialtyIdSpec");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("WebBRS.Models.Lecturer", b =>
                {
                    b.Property<int>("IdSLecturer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonIdPerson")
                        .HasColumnType("int");

                    b.HasKey("IdSLecturer");

                    b.HasIndex("PersonIdPerson");

                    b.ToTable("Lectureres");
                });

            modelBuilder.Entity("WebBRS.Models.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeReg")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatronicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerson");

                    b.ToTable("Persons", "dbo");
                });

            modelBuilder.Entity("WebBRS.Models.SemestrBase", b =>
                {
                    b.Property<int>("IdSemestr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NameSemestr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSemestr");

                    b.ToTable("SemestrBases");
                });

            modelBuilder.Entity("WebBRS.Models.Specialty", b =>
                {
                    b.Property<int>("IdSpec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ID_1c_int")
                        .HasColumnType("int");

                    b.Property<string>("NameSpec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortNameSpec")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSpec");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("WebBRS.Models.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_Person_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<string>("ZachNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStudent");

                    b.HasIndex("IdPerson");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebBRS.Models.StudentsGroupHistory", b =>
                {
                    b.Property<int>("IdSGH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConditionOfPersonIdConditionOfPerson")
                        .HasColumnType("int");

                    b.Property<int>("CourseIdCourse")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateSGHFinished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSGHStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupIdGroup")
                        .HasColumnType("int");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_1c_CounditionOfPerson")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_1c_Course")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_1c_Group")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ID_1c_Person")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int?>("StudyYearIdStudyYear")
                        .HasColumnType("int");

                    b.HasKey("IdSGH");

                    b.HasIndex("ConditionOfPersonIdConditionOfPerson");

                    b.HasIndex("CourseIdCourse");

                    b.HasIndex("GroupIdGroup");

                    b.HasIndex("IdStudent");

                    b.HasIndex("StudyYearIdStudyYear");

                    b.ToTable("StudentsGroupHistories");
                });

            modelBuilder.Entity("WebBRS.Models.StudyPlanRecord", b =>
                {
                    b.Property<int>("IdStudyPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FacultetDepartmentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SpecialtyIdSpec")
                        .HasColumnType("int");

                    b.Property<int?>("StudyYearIdStudyYear")
                        .HasColumnType("int");

                    b.Property<int?>("TypeControlIdTC")
                        .HasColumnType("int");

                    b.Property<int?>("TypeStudyPlanRecordIdTSPR")
                        .HasColumnType("int");

                    b.HasKey("IdStudyPlan");

                    b.HasIndex("FacultetDepartmentID");

                    b.HasIndex("SpecialtyIdSpec");

                    b.HasIndex("StudyYearIdStudyYear");

                    b.HasIndex("TypeControlIdTC");

                    b.HasIndex("TypeStudyPlanRecordIdTSPR");

                    b.ToTable("StudyPlanRecords");
                });

            modelBuilder.Entity("WebBRS.Models.StudyYear", b =>
                {
                    b.Property<int>("IdStudyYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStudyYear");

                    b.ToTable("StudyYears");
                });

            modelBuilder.Entity("WebBRS.Models.Subject", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeSubject")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NameSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubject");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("WebBRS.Models.SubjectForGroup", b =>
                {
                    b.Property<int>("IdSFG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("ID_reff")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdCourse")
                        .HasColumnType("int");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<int?>("IdStudyPlan")
                        .HasColumnType("int");

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<int?>("LecturerIdLecturer")
                        .HasColumnType("int");

                    b.Property<int?>("LecturerIdSLecturer")
                        .HasColumnType("int");

                    b.Property<int?>("LecturerIdSubject")
                        .HasColumnType("int");

                    b.Property<DateTime>("SFGDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeStudyIdTS")
                        .HasColumnType("int");

                    b.HasKey("IdSFG");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("IdCourse");

                    b.HasIndex("IdGroup");

                    b.HasIndex("IdPerson");

                    b.HasIndex("IdStudyPlan");

                    b.HasIndex("IdSubject");

                    b.HasIndex("LecturerIdSLecturer");

                    b.HasIndex("TypeStudyIdTS");

                    b.HasIndex("LecturerIdLecturer", "LecturerIdSubject");

                    b.ToTable("SubjectForGroups");
                });

            modelBuilder.Entity("WebBRS.Models.SubjectLecturer", b =>
                {
                    b.Property<int>("IdLecturer")
                        .HasColumnType("int");

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdTS")
                        .HasColumnType("int");

                    b.Property<DateTime>("SLDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("IdLecturer", "IdSubject");

                    b.HasIndex("IdSubject");

                    b.HasIndex("IdTS");

                    b.ToTable("SubjectLecturers");
                });

            modelBuilder.Entity("WebBRS.Models.TypeAttedance", b =>
                {
                    b.Property<int>("IdTA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TAShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTA");

                    b.ToTable("TypeAttedances");
                });

            modelBuilder.Entity("WebBRS.Models.TypeControl", b =>
                {
                    b.Property<int>("IdTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Descriptpion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("_Marked")
                        .HasColumnType("bit");

                    b.Property<string>("_ShortDescr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTC");

                    b.ToTable("TypeControls");
                });

            modelBuilder.Entity("WebBRS.Models.TypeStudy", b =>
                {
                    b.Property<int>("IdTS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortTypeStudyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeStudyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTS");

                    b.ToTable("TypeStudies");
                });

            modelBuilder.Entity("WebBRS.Models.TypeStudyPlanRecord", b =>
                {
                    b.Property<int>("IdTSPR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("RoditelIdTSPR")
                        .HasColumnType("int");

                    b.Property<string>("_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Fld9231")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTSPR");

                    b.HasIndex("RoditelIdTSPR");

                    b.ToTable("TypeStudyPlanRecords");
                });

            modelBuilder.Entity("WebBRS.Models.Views.AuthUsers", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_department")
                        .HasColumnType("int");

                    b.Property<int>("id_employee")
                        .HasColumnType("int");

                    b.Property<int>("id_role")
                        .HasColumnType("int");

                    b.Property<int>("id_role_actual")
                        .HasColumnType("int");

                    b.Property<string>("name_department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_role_actual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("AuthUsers");
                });

            modelBuilder.Entity("WebBRS.Models.WorkPersonStatus", b =>
                {
                    b.Property<int>("IdWPS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("WorkpersonStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkpersonStatusNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdWPS");

                    b.ToTable("WorkPersonStatuses");
                });

            modelBuilder.Entity("WebBRS.Models.WorkType", b =>
                {
                    b.Property<int>("IdWT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ID_1c")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShortWorkTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdWT");

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("WebBRS.Models.Attendance", b =>
                {
                    b.HasOne("WebBRS.Models.ClassWork", "ClassWork")
                        .WithMany()
                        .HasForeignKey("ClassWorkIdClassWork");

                    b.HasOne("WebBRS.Models.ExactClassForLecturerClass", null)
                        .WithMany("Attendances")
                        .HasForeignKey("ExactClassForLecturerClassIdEXCFLC");

                    b.HasOne("WebBRS.Models.ExactClass", "ExactClass")
                        .WithMany("Attendances")
                        .HasForeignKey("ExactClassIdClass");

                    b.HasOne("WebBRS.Models.StudentsGroupHistory", "SGH")
                        .WithMany("Attendances")
                        .HasForeignKey("IdAtt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.TypeAttedance", "TypeAttedance")
                        .WithMany()
                        .HasForeignKey("TypeAttedanceIdTA");

                    b.HasOne("WebBRS.Models.WorkPersonStatus", "WorkPersonStatus")
                        .WithMany()
                        .HasForeignKey("WorkPersonStatusIdWPS");

                    b.Navigation("ClassWork");

                    b.Navigation("ExactClass");

                    b.Navigation("SGH");

                    b.Navigation("TypeAttedance");

                    b.Navigation("WorkPersonStatus");
                });

            modelBuilder.Entity("WebBRS.Models.Auth.User", b =>
                {
                    b.HasOne("WebBRS.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonIdPerson");

                    b.HasOne("WebBRS.Models.Auth.Role", "Role")
                        .WithMany()
                        .HasForeignKey("Roleid_role");

                    b.Navigation("Person");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebBRS.Models.ClassWork", b =>
                {
                    b.HasOne("WebBRS.Models.ExactClass", "ExactClass")
                        .WithMany("ClassWorks")
                        .HasForeignKey("IdClassWork")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.WorkType", "WorkType")
                        .WithMany("ClassWorks")
                        .HasForeignKey("IdClassWork")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExactClass");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("WebBRS.Models.Curator", b =>
                {
                    b.HasOne("WebBRS.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupIdGroup");

                    b.HasOne("WebBRS.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonIdPerson");

                    b.Navigation("Group");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WebBRS.Models.Department", b =>
                {
                    b.HasOne("WebBRS.Models.DepartmentType", "DepartmentType")
                        .WithMany("Departments")
                        .HasForeignKey("DepartmentTypeDepartTypeID");

                    b.HasOne("WebBRS.Models.Department", "HeadDepart")
                        .WithMany("Departments")
                        .HasForeignKey("HeadDepartId");

                    b.Navigation("DepartmentType");

                    b.Navigation("HeadDepart");
                });

            modelBuilder.Entity("WebBRS.Models.DoClassWorkAttend", b =>
                {
                    b.HasOne("WebBRS.Models.ClassWork", "ClassWork")
                        .WithMany("DoClassWorkAttends")
                        .HasForeignKey("IdClassWork");

                    b.HasOne("WebBRS.Models.WorkPersonStatus", "WorkPersonStatus")
                        .WithMany()
                        .HasForeignKey("WorkPersonStatusIdWPS");

                    b.Navigation("ClassWork");

                    b.Navigation("WorkPersonStatus");
                });

            modelBuilder.Entity("WebBRS.Models.ExactClass", b =>
                {
                    b.HasOne("WebBRS.Models.Department", "Auditory")
                        .WithMany()
                        .HasForeignKey("AuditoryDepartmentID");

                    b.HasOne("WebBRS.Models.ExactClassForLecturerClass", "ExactClassForLecturerClass")
                        .WithMany("ExactClasses")
                        .HasForeignKey("ExactClassForLecturerClassIdEXCFLC");

                    b.HasOne("WebBRS.Models.SubjectForGroup", "SubjectForGroup")
                        .WithMany()
                        .HasForeignKey("IdSFG");

                    b.HasOne("WebBRS.Models.Lecturer", null)
                        .WithMany("ExactClasses")
                        .HasForeignKey("LecturerIdSLecturer");

                    b.HasOne("WebBRS.Models.Person", "PersonLecturer")
                        .WithMany()
                        .HasForeignKey("PersonLecturerIdPerson");

                    b.HasOne("WebBRS.Models.SubjectLecturer", "SubjectLecturer")
                        .WithMany()
                        .HasForeignKey("SubjectLecturerIdLecturer", "SubjectLecturerIdSubject");

                    b.Navigation("Auditory");

                    b.Navigation("ExactClassForLecturerClass");

                    b.Navigation("PersonLecturer");

                    b.Navigation("SubjectForGroup");

                    b.Navigation("SubjectLecturer");
                });

            modelBuilder.Entity("WebBRS.Models.ExactClassForLecturerClass", b =>
                {
                    b.HasOne("WebBRS.Models.Department", "Auditorya")
                        .WithMany()
                        .HasForeignKey("AuditoryaDepartmentID");

                    b.HasOne("WebBRS.Models.Person", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerIdPerson");

                    b.Navigation("Auditorya");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("WebBRS.Models.Group", b =>
                {
                    b.HasOne("WebBRS.Models.Department", "DepartmentGroup")
                        .WithMany("Groups")
                        .HasForeignKey("DepartmentGroupDepartmentID");

                    b.HasOne("WebBRS.Models.Group", "GroupPrev")
                        .WithMany()
                        .HasForeignKey("GroupPrevIdGroup");

                    b.HasOne("WebBRS.Models.Specialty", "Specialty")
                        .WithMany("Groups")
                        .HasForeignKey("SpecialtyIdSpec");

                    b.Navigation("DepartmentGroup");

                    b.Navigation("GroupPrev");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("WebBRS.Models.Lecturer", b =>
                {
                    b.HasOne("WebBRS.Models.Person", "Person")
                        .WithMany("Lecturers")
                        .HasForeignKey("PersonIdPerson");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WebBRS.Models.Student", b =>
                {
                    b.HasOne("WebBRS.Models.Person", "Person")
                        .WithMany("Students")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WebBRS.Models.StudentsGroupHistory", b =>
                {
                    b.HasOne("WebBRS.Models.ConditionOfPerson", "ConditionOfPerson")
                        .WithMany("StudentsGroupHistories")
                        .HasForeignKey("ConditionOfPersonIdConditionOfPerson");

                    b.HasOne("WebBRS.Models.Course", "Course")
                        .WithMany("StudentsGroupHistories")
                        .HasForeignKey("CourseIdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.Group", "Group")
                        .WithMany("StudentsGroupHistories")
                        .HasForeignKey("GroupIdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.Student", "Student")
                        .WithMany("StudentsGroupHistories")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.StudyYear", "StudyYear")
                        .WithMany()
                        .HasForeignKey("StudyYearIdStudyYear");

                    b.Navigation("ConditionOfPerson");

                    b.Navigation("Course");

                    b.Navigation("Group");

                    b.Navigation("Student");

                    b.Navigation("StudyYear");
                });

            modelBuilder.Entity("WebBRS.Models.StudyPlanRecord", b =>
                {
                    b.HasOne("WebBRS.Models.Department", "Facultet")
                        .WithMany()
                        .HasForeignKey("FacultetDepartmentID");

                    b.HasOne("WebBRS.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("SpecialtyIdSpec");

                    b.HasOne("WebBRS.Models.StudyYear", "StudyYear")
                        .WithMany()
                        .HasForeignKey("StudyYearIdStudyYear");

                    b.HasOne("WebBRS.Models.TypeControl", "TypeControl")
                        .WithMany()
                        .HasForeignKey("TypeControlIdTC");

                    b.HasOne("WebBRS.Models.TypeStudyPlanRecord", "TypeStudyPlanRecord")
                        .WithMany()
                        .HasForeignKey("TypeStudyPlanRecordIdTSPR");

                    b.Navigation("Facultet");

                    b.Navigation("Specialty");

                    b.Navigation("StudyYear");

                    b.Navigation("TypeControl");

                    b.Navigation("TypeStudyPlanRecord");
                });

            modelBuilder.Entity("WebBRS.Models.SubjectForGroup", b =>
                {
                    b.HasOne("WebBRS.Models.Department", "Department")
                        .WithMany("SubjectForGroups")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.Course", "Course")
                        .WithMany("SubjectForGroups")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.Group", "Group")
                        .WithMany("SubjectForGroups")
                        .HasForeignKey("IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.Person", "Person")
                        .WithMany("SubjectsForGroup")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.StudyPlanRecord", "StudyPlanRecord")
                        .WithMany("SubjectForGroups")
                        .HasForeignKey("IdStudyPlan");

                    b.HasOne("WebBRS.Models.Subject", "Subject")
                        .WithMany("SubjectForGroups")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.Lecturer", null)
                        .WithMany("SubjectForGroups")
                        .HasForeignKey("LecturerIdSLecturer");

                    b.HasOne("WebBRS.Models.TypeStudy", "TypeStudy")
                        .WithMany("SubjectForGroups")
                        .HasForeignKey("TypeStudyIdTS");

                    b.HasOne("WebBRS.Models.SubjectLecturer", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerIdLecturer", "LecturerIdSubject");

                    b.Navigation("Course");

                    b.Navigation("Department");

                    b.Navigation("Group");

                    b.Navigation("Lecturer");

                    b.Navigation("Person");

                    b.Navigation("StudyPlanRecord");

                    b.Navigation("Subject");

                    b.Navigation("TypeStudy");
                });

            modelBuilder.Entity("WebBRS.Models.SubjectLecturer", b =>
                {
                    b.HasOne("WebBRS.Models.Lecturer", "Lecturer")
                        .WithMany("SubjectLecturers")
                        .HasForeignKey("IdLecturer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.Subject", "Subject")
                        .WithMany("SubjectLecturers")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBRS.Models.TypeStudy", "TypeStudy")
                        .WithMany("SubjectLecturers")
                        .HasForeignKey("IdTS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Subject");

                    b.Navigation("TypeStudy");
                });

            modelBuilder.Entity("WebBRS.Models.TypeStudyPlanRecord", b =>
                {
                    b.HasOne("WebBRS.Models.TypeStudyPlanRecord", "Roditel")
                        .WithMany()
                        .HasForeignKey("RoditelIdTSPR");

                    b.Navigation("Roditel");
                });

            modelBuilder.Entity("WebBRS.Models.ClassWork", b =>
                {
                    b.Navigation("DoClassWorkAttends");
                });

            modelBuilder.Entity("WebBRS.Models.ConditionOfPerson", b =>
                {
                    b.Navigation("StudentsGroupHistories");
                });

            modelBuilder.Entity("WebBRS.Models.Course", b =>
                {
                    b.Navigation("StudentsGroupHistories");

                    b.Navigation("SubjectForGroups");
                });

            modelBuilder.Entity("WebBRS.Models.Department", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Groups");

                    b.Navigation("SubjectForGroups");
                });

            modelBuilder.Entity("WebBRS.Models.DepartmentType", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("WebBRS.Models.ExactClass", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("ClassWorks");
                });

            modelBuilder.Entity("WebBRS.Models.ExactClassForLecturerClass", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("ExactClasses");
                });

            modelBuilder.Entity("WebBRS.Models.Group", b =>
                {
                    b.Navigation("StudentsGroupHistories");

                    b.Navigation("SubjectForGroups");
                });

            modelBuilder.Entity("WebBRS.Models.Lecturer", b =>
                {
                    b.Navigation("ExactClasses");

                    b.Navigation("SubjectForGroups");

                    b.Navigation("SubjectLecturers");
                });

            modelBuilder.Entity("WebBRS.Models.Person", b =>
                {
                    b.Navigation("Lecturers");

                    b.Navigation("Students");

                    b.Navigation("SubjectsForGroup");
                });

            modelBuilder.Entity("WebBRS.Models.Specialty", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("WebBRS.Models.Student", b =>
                {
                    b.Navigation("StudentsGroupHistories");
                });

            modelBuilder.Entity("WebBRS.Models.StudentsGroupHistory", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("WebBRS.Models.StudyPlanRecord", b =>
                {
                    b.Navigation("SubjectForGroups");
                });

            modelBuilder.Entity("WebBRS.Models.Subject", b =>
                {
                    b.Navigation("SubjectForGroups");

                    b.Navigation("SubjectLecturers");
                });

            modelBuilder.Entity("WebBRS.Models.TypeStudy", b =>
                {
                    b.Navigation("SubjectForGroups");

                    b.Navigation("SubjectLecturers");
                });

            modelBuilder.Entity("WebBRS.Models.WorkType", b =>
                {
                    b.Navigation("ClassWorks");
                });
#pragma warning restore 612, 618
        }
    }
}
